apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: deps
spec:
    templates:
    - name: deps
      container:
        image: golang:1.18
        volumeMounts:
          - mountPath: /go/src/github.com/go-api
            name: work
            subPath: src
          - mountPath: /go/pkg/mod
            name: work
            subPath: GOMODCACHE
          - mountPath: /root/.cache/go-build
            name: work
            subPath: GOCACHE
        workingDir: /go/src/github.com/go-api
        command: [ sh, -xuce ]
        args:
          - |
            go mod tidy
---
apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: build
spec:
    templates:
    - name: build
      container:
        image: golang:1.18
        volumeMounts:
          - mountPath: /go/src/github.com/go-api
            name: work
            subPath: src
          - mountPath: /go/pkg/mod
            name: work
            subPath: GOMODCACHE
          - mountPath: /root/.cache/go-build
            name: work
            subPath: GOCACHE
        workingDir: /go/src/github.com/go-api
        command: [ sh, -xuce ]
        args:
          - |
            CGO_ENABLED=0 go build main.go
---
apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: docker-build
spec:
    templates:
    - name: docker-build
      inputs:
        parameters:
        - name: dockerRepo
      volumes:
        - name: docker-config
          secret:
            secretName: docker-config
      container:
        image: moby/buildkit:v0.9.3-rootless
        volumeMounts:
          - mountPath: /go/src/github.com/go-api
            name: work
            subPath: src
          - name: docker-config
            mountPath: /.docker
        workingDir: /go/src/github.com/go-api
        env:
          - name: BUILDKITD_FLAGS
            value: --oci-worker-no-process-sandbox
          - name: DOCKER_CONFIG
            value: /.docker
        command:
          - buildctl-daemonless.sh
        args:
          - build
          - --frontend
          - dockerfile.v0
          - --local
          - context=.
          - --local
          - dockerfile=docker/
          - --output
          - type=image,name={{inputs.parameters.dockerRepo}},push=true
        securityContext:
          privileged: true

